% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functionutils.functions.R
\name{substitute.parameters}
\alias{substitute.parameters}
\title{Substitute parameters in a function with values}
\usage{
substitute.parameters(func, params = as.list(environment(func)))
}
\arguments{
\item{func}{a function or expression}

\item{params}{a list of the form \code{list(param1=value1,param2=value2,...)} with values
to substitute the parameters. Defaults to the variable list in the current environment.\cr
\strong{Hint:} the values may also be \code{\link{quote()}}ed R expressions. See examples.}
}
\description{
Replace variables in \code{func} with values given in \code{params}. Remove argument names from \code{func} if necessary.
}
\details{
This is a convenient wrapper around the base function \code{\link{substitute}} extended
 by the possibility to substitute values in a function, possibly removing
 arguments of the function according to which variables are to be replaced with values.
}
\examples{
# a simple function
f <- function( a, b, c ) a + b + c

substitute.parameters( f, list( a = 1 ) )
# a is replaced by 1, the function looses the argument a
# function (b, c) 
# 1 + b + c

substitute.parameters( f, list( a = quote(b) ))
# a is replaced with b, the function looses the argument a
# function (b, c) 
# b + b + c

a = 10 # Set global value for a
substitute.parameters( f ) # no params argument given
# By default, params are taken from the environment of f
# function (b, c) 
# 10 + b + c
}

